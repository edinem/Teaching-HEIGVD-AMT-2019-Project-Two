swagger: '2.0'
info:
  version: '0.1.0'
  title: Calendar API
  description: An API to manage calendars
host: localhost:8080
basePath: /api/app
schemes:
  - http
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
security:
  - ApiKeyAuth: []
paths:
  /calendars:
    post:
      summary: create a calendar
      operationId: createCalendar
      consumes:
        - application/json
      parameters:
        - name: Calendar
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        '201':
          description: created
          schema:
            type: object
        '401':
          $ref: '#/responses/UnauthorizedError'
    get:
      summary: get the list of all calendars avaible for the users
      operationId: getCalendars
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Calendar'
        '401':
          $ref: '#/responses/UnauthorizedError'
    put:
      summary: edit a calendar
      operationId: editCalendar
      consumes:
        - application/json
      parameters:
        - name: calendar
          in: body
          required: true
          schema:
            $ref: '#/definitions/Calendar'
      responses:
        '200':
          description: success
        '403':
          description: not authorized
        '401':
          $ref: '#/responses/UnauthorizedError'
  /calendars/{calendarId}:
    get:
      summary: get a single calendar
      operationId: getCalendarById
      produces:
        - application/json
      parameters:
        - name: calendarId
          in: path
          type: integer
          required: true
          description: Numeric ID of the calendar to get
      responses:
        '200':
          description: success
          schema:
            type: object
        '403':
          description: not authorized
        '401':
          $ref: '#/responses/UnauthorizedError'
    delete:
      summary: delete a calendar
      operationId: deleteCalendar
      consumes:
        - application/json
      parameters:
        - name: calendarId
          in: path
          type: integer
          required: true
          description: Numeric ID of the calendar to get
      responses:
        '200':
          description: success
          schema:
            type: object
        '401':
          $ref: '#/responses/UnauthorizedError'

  /users:
    get:
      summary: get all users in db
      operationId: getUsers
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/UnauthorizedError'

  /access:
    get:
      summary: get all access for a calendar
      operationId: getAccess
      produces:
        - application/json
      parameters:
        - name: calendarId
          in: body
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Access'
        '403':
          description: forbidden
        '401':
          $ref: '#/responses/UnauthorizedError'
    post:
      summary: create an access for a calendar
      operationId: addAccess
      produces:
        - application/json
      parameters:
        - name: access
          in: body
          required: true
          schema:
            $ref: '#/definitions/Access'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Access'
        '403':
          description: forbidden
        '401':
          $ref: '#/responses/UnauthorizedError'
    delete:
      summary: delete an access
      operationId: deleteAccess
      parameters:
        - name: access
          in: body
          required: true
          schema:
            $ref: '#/definitions/Access'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Access'
        '403':
          description: forbidden
        '401':
          $ref: '#/responses/UnauthorizedError'

definitions:
  Calendar:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  User:
    type: object
    properties:
      email:
        type: string
  Access:
    type: object
    properties:
      user:
        type: string
      calendar:
        type: integer

responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
